- name: Refresh package repositories
  become: true
  ansible.builtin.apt:
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Install common base set of packages
  become: true
  ansible.builtin.package:
    name:
      - htop
      - neovim
      - most
      - openssh-server
      - "{{ openssh_client_pkg_name }}"
      - ripgrep
      - rsync
      - tmux
      - unzip
      - "{{ xz_pkg_name }}"
      - curl
      - wget
      - "{{ netcat_pkg_name }}"
      - ca-certificates
      - ansible
      - jq
      - git
      - git-lfs
      - zip
    state: latest

- name: Ensure local bin directory exists
  ansible.builtin.file:
    path: "{{ local_bin_dir }}"
    state: directory
    mode: '0755'

- name: Ensure bash config directory is present
  ansible.builtin.file:
    path: "{{ bash_config_dir }}"
    state: directory

- name: Ensure bash dropins directory is present
  ansible.builtin.file:
    path: "{{ bash_config_dropins_dir }}"
    state: directory

- name: Ensure .bashrc is present
  ansible.builtin.template:
    src: bashrc.j2
    dest: "{{ bash_config_dir}}/bashrc"
    mode: '0755'

- name: Ensure .bashrc is symlinked out to home dir
  ansible.builtin.file:
    src: "{{ bash_config_dir }}/bashrc"
    dest: "{{ ansible_env.HOME }}/.bashrc"
    state: link
    force: yes

- name: Ensure base bashrc snippets are dropped into place
  ansible.builtin.copy:
    src: bashrc_dropins/
    dest: "{{ bash_config_dropins_dir}}/"

- name: Ensure .bash_profile is present
  ansible.builtin.copy:
    src: bash_profile
    dest: "{{ bash_config_dir}}/bash_profile"

- name: Ensure .bash_profile is symlinked out to home dir
  ansible.builtin.file:
    src: "{{ bash_config_dir }}/bash_profile"
    dest: "{{ ansible_env.HOME }}/.bash_profile"
    state: link
    force: yes
