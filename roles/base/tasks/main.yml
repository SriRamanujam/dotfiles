---
# tasks file for base

- name: Load distribution-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower | replace(' ', '-') }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower | replace(' ', '-') }}.yml"

# Determine if current install is graphical and set a fact if so
- name: Set graphical fact
  ansible.builtin.set_fact:
    is_graphical: true
  when: (ansible_facts['distribution'] == 'Fedora' and 'fedora-release-workstation' in ansible_facts.packages) or
        (ansible_facts['distribution'] == 'Ubuntu' and 'ubuntu-desktop' in ansible_facts.packages)

- name: Override become if on OSX
  ansible.builtin.set_fact:
    ansible_become: false
  when: ansible_system == 'Darwin'

- include_tasks: base.yml
- include_tasks: php.yml
- include_tasks: rust.yml
- include_tasks: python.yml

# Skip podman installation on WSL hosts and OSX
- include_tasks: podman.yml
  when:
    - "'microsoft' not in ansible_kernel"
    - "ansible_os_family != 'Darwin'"

- include_tasks: aws.yml
- include_tasks: openshift.yml
- include_tasks: tmux.yml
- include_tasks: go.yml
- include_tasks: git.yml
  #- include_tasks: hashicorp.yml

  #- include_tasks: dotnet.yml
- include_tasks: atuin.yml

# Distro-specific tasks
- include_tasks: fedora.yml
  when:
    - ansible_facts['distribution'] == 'Fedora'

- include_tasks: ubuntu.yml
  when:
    - ansible_facts['distribution'] == 'Ubuntu'

# Finally, deploy a mechanism to automatically run ansible-pull every couple of hours.
- include_tasks: pull.yml
